-- MySQL Script generated by MySQL Workbench
-- So 21 Mai 2017 19:06:45 CEST
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`Users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Users` (
  `ID` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `FirstName` VARCHAR(45) NULL,
  `LastName` VARCHAR(45) NULL,
  `UserName` VARCHAR(45) NOT NULL,
  `EmailAddress` VARCHAR(60) NOT NULL,
  `CreatedAt` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `IsActive` TINYINT NOT NULL DEFAULT 1,
  `IsVerified` TINYINT NOT NULL DEFAULT 0,
  PRIMARY KEY (`ID`),
  UNIQUE INDEX `id_UNIQUE` (`ID` ASC),
  UNIQUE INDEX `UserName_UNIQUE` (`UserName` ASC),
  UNIQUE INDEX `EmailAddress_UNIQUE` (`EmailAddress` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Credentials`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Credentials` (
  `ID` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `UserName` VARCHAR(45) NOT NULL,
  `PasswordSalt` VARCHAR(30) NOT NULL,
  `PasswordHash` VARCHAR(60) NOT NULL,
  `RelatedUserID` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`ID`),
  UNIQUE INDEX `ID_UNIQUE` (`ID` ASC),
  UNIQUE INDEX `UserName_UNIQUE` (`UserName` ASC),
  INDEX `fk_Credentials_Users_idx` (`RelatedUserID` ASC),
  UNIQUE INDEX `Users_ID_UNIQUE` (`RelatedUserID` ASC),
  CONSTRAINT `fk_Credentials_Users`
    FOREIGN KEY (`RelatedUserID`)
    REFERENCES `mydb`.`Users` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`TodoLists`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`TodoLists` (
  `ID` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `Title` VARCHAR(60) NOT NULL,
  `Deadline` DATETIME NULL,
  `CreatedAt` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  `RelatedUserID` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`ID`),
  UNIQUE INDEX `ID_UNIQUE` (`ID` ASC),
  INDEX `fk_TodoLists_Users1_idx` (`RelatedUserID` ASC),
  CONSTRAINT `fk_TodoLists_Users1`
    FOREIGN KEY (`RelatedUserID`)
    REFERENCES `mydb`.`Users` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`TodoItems`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`TodoItems` (
  `ID` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `Title` VARCHAR(60) NOT NULL,
  `Description` VARCHAR(255) NULL,
  `Effort` TINYINT(2) NULL,
  `Status` ENUM('DONE', 'INWORK', 'IDLE') NULL,
  `Deadline` DATETIME NULL,
  `CreatedAt` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `RelatedTodoListID` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`ID`),
  UNIQUE INDEX `ID_UNIQUE` (`ID` ASC),
  INDEX `fk_TodoItem_TodoLists1_idx` (`RelatedTodoListID` ASC),
  CONSTRAINT `fk_TodoItem_TodoLists1`
    FOREIGN KEY (`RelatedTodoListID`)
    REFERENCES `mydb`.`TodoLists` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Posts`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Posts` (
  `ID` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `Title` VARCHAR(100) NOT NULL,
  `Content` TEXT NOT NULL,
  `CreatedAt` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `Status` ENUM('PUBLISHED') NULL,
  `Likes` SMALLINT(5) UNSIGNED NOT NULL DEFAULT 0,
  `RelatedUserID` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`ID`),
  UNIQUE INDEX `ID_UNIQUE` (`ID` ASC),
  INDEX `fk_Posts_Users1_idx` (`RelatedUserID` ASC),
  CONSTRAINT `fk_Posts_Users1`
    FOREIGN KEY (`RelatedUserID`)
    REFERENCES `mydb`.`Users` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Tags`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Tags` (
  `ID` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`ID`),
  UNIQUE INDEX `ID_UNIQUE` (`ID` ASC),
  UNIQUE INDEX `Name_UNIQUE` (`Name` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Events`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Events` (
  `ID` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `Title` VARCHAR(100) NOT NULL,
  `Description` VARCHAR(500) NULL,
  `Location` VARCHAR(100) NULL,
  `StartDate` DATETIME NOT NULL,
  `EndDate` DATETIME NULL,
  `CreatedAt` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `RelatedUserID` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`ID`, `RelatedUserID`),
  UNIQUE INDEX `ID_UNIQUE` (`ID` ASC),
  INDEX `fk_Events_Users1_idx` (`RelatedUserID` ASC),
  CONSTRAINT `fk_Events_Users1`
    FOREIGN KEY (`RelatedUserID`)
    REFERENCES `mydb`.`Users` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Comments`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Comments` (
  `ID` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `Content` VARCHAR(600) NOT NULL,
  `CreatedAt` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `Likes` SMALLINT(5) UNSIGNED NOT NULL DEFAULT 0,
  `RelatedPostID` INT UNSIGNED NOT NULL,
  `RelatedUserID` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`ID`),
  UNIQUE INDEX `ID_UNIQUE` (`ID` ASC),
  INDEX `fk_Comments_Posts1_idx` (`RelatedPostID` ASC),
  INDEX `fk_Comments_Users1_idx` (`RelatedUserID` ASC),
  CONSTRAINT `fk_Comments_Posts1`
    FOREIGN KEY (`RelatedPostID`)
    REFERENCES `mydb`.`Posts` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Comments_Users1`
    FOREIGN KEY (`RelatedUserID`)
    REFERENCES `mydb`.`Users` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Posts_has_Tags`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Posts_has_Tags` (
  `RelatedPostID` INT UNSIGNED NOT NULL,
  `RelatedTagID` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`RelatedPostID`, `RelatedTagID`),
  INDEX `fk_Posts_has_Tags_Tags1_idx` (`RelatedTagID` ASC),
  INDEX `fk_Posts_has_Tags_Posts1_idx` (`RelatedPostID` ASC),
  CONSTRAINT `fk_Posts_has_Tags_Posts1`
    FOREIGN KEY (`RelatedPostID`)
    REFERENCES `mydb`.`Posts` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Posts_has_Tags_Tags1`
    FOREIGN KEY (`RelatedTagID`)
    REFERENCES `mydb`.`Tags` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `mydb`;

DELIMITER $$
USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`Users_BEFORE_DELETE` BEFORE DELETE ON `Users` FOR EACH ROW
BEGIN
 DELETE FROM `Credentials` WHERE RelatedUserID = OLD.ID;
END$$

USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`Posts_BEFORE_DELETE` BEFORE DELETE ON `Posts` FOR EACH ROW
BEGIN
 DELETE FROM `Comments` WHERE RelatedPostID = OLD.ID;
 DELETE FROM `Posts_has_Tags` WHERE RelatedPostID = OLD.ID;
END$$

USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`Tags_BEFORE_DELETE` BEFORE DELETE ON `Tags` FOR EACH ROW
BEGIN
 DELETE FROM `Posts_has_Tags` WHERE RelatedTagID = OLD.ID;
END$$


DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
